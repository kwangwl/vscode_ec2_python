AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy an EC2 instance with VS Code Server in a public subnet of the default VPC in ap-northeast-2 using Amazon Linux 2 or Amazon Linux 2023

Parameters:
  Region:
    Description: "The AWS region where the resources will be deployed."
    Type: String
    Default: "ap-northeast-2"

  AvailabilityZone:
    Description: "The Availability Zone where the EC2 instance will be deployed."
    Type: AWS::EC2::AvailabilityZone::Name
    Default: "ap-northeast-2a"

  InstanceType:
    Description: "EC2 instance type for the server"
    Type: String
    Default: "t3.xlarge"

  AMIType:
    Description: "Select the Amazon Linux version for the EC2 instance"
    Type: String
    Default: "AmazonLinux2023"

  AmazonLinux2023AmiId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64"

  DefaultVPCId:
    Description: "The ID of the default VPC"
    Type: AWS::EC2::VPC::Id

  PublicSubnetId:
    Description: "The ID of a public subnet in the default VPC"
    Type: AWS::EC2::Subnet::Id

Resources:
  # Create a VPC
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Create an Internet Gateway
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  # Attach Internet Gateway to the VPC
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # Create a Public Subnet
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [0, !GetAZs !Ref 'AWS:Region']
      Tags:
        - Key: Name
          Value: MyPublicSubnet

  # Create a Route Table
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MyRouteTable

  # Associate Route Table with the Public Subnet
  RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref RouteTable

  # Create a Default Route to the Internet
  DefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # Create a security group for the EC2 instance
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH, HTTP, and HTTPS access
      VpcId: !Ref DefaultVPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0

  # Create an EC2 instance for VS Code Server
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t3.xlarge
      ImageId: !Ref AmazonLinux2023AmiId
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          SubnetId: !Ref PublicSubnet
          DeviceIndex: 0
          GroupSet:
            - !Ref InstanceSecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 20  # 20GB
            VolumeType: gp3
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash
          # AWS CLI 최신 버전 설치 / Install the latest version of AWS CLI
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          # SSM 플러그인 설치 / Install SSM Plugin
          sudo yum install -y https://s3.amazonaws.com/session-manager-downloads/plugin/latest/linux_64bit/session-manager-plugin.rpm
          # 개발 도구 및 기타 필수 패키지 설치 / Install development tools and other necessary packages
          yum update -y || dnf update -y
          yum install -y git || dnf install -y git
          yum groupinstall -y "Development Tools" || dnf groupinstall -y "Development Tools"
          # python 3.9
          yum install -y python3.9 || dnf install -y python3.9
          yum install python3-pip || dnf yum install python3-pip
          # VS Code Server 설치 / Install VS Code Server
          wget https://github.com/coder/code-server/releases/download/v4.0.1/code-server-4.0.1-linux-amd64.tar.gz
          tar -xzf code-server-4.0.1-linux-amd64.tar.gz
          mv code-server-4.0.1-linux-amd64 /usr/local/lib/code-server
          ln -s /usr/local/lib/code-server/bin/code-server /usr/local/bin/code-server
          # VS Code Server 설정 / Configure VS Code Server
          mkdir -p /home/ec2-user/.config/code-server
          cat <<EOF > /home/ec2-user/.config/code-server/config.yaml
          bind-addr: 0.0.0.0:8080
          auth: none
          cert: false
          EOF
          chown -R ec2-user:ec2-user /home/ec2-user/.config
          # VS Code Server 서비스 구성 / Configure VS Code Server service
          cat <<EOF > /etc/systemd/system/code-server.service
          [Unit]
          Description=VS Code Server
          After=network.target
          [Service]
          Type=simple
          User=ec2-user
          ExecStart=/usr/local/bin/code-server --config /home/ec2-user/.config/code-server/config.yaml
          Restart=always
          [Install]
          WantedBy=multi-user.target
          EOF
          systemctl daemon-reload
          systemctl enable code-server
          systemctl start code-server
      Tags:
        - Key: Name
          Value: EC2VSCodeServer

Outputs:
  EC2InstancePublicIP:
    Description: "Public IP address of the VS Code Server EC2 instance"
    Value: !GetAtt EC2Instance.PublicIp
